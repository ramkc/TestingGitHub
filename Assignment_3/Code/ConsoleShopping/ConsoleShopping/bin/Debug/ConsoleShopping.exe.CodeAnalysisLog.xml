<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Targets>
  <Target Name="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping\bin\Debug\ConsoleShopping.exe">
   <Modules>
    <Module Name="consoleshopping.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'ConsoleShopping.exe' with a strong name key.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="ConsoleShopping">
       <Types>
        <Type Name="Program" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Main(System.String[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="args" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="Program.cs" Line="11">Parameter 'args' of 'Program.Main(string[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Shopping" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#GetInvoice()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="Shopping.cs" Line="57">In method 'Shopping.GetInvoice()', object 'invoiceForShoppingCart' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'invoiceForShoppingCart' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ShoppingConsoleUI" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CreateNewOrder()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="75">Method 'ShoppingConsoleUI.CreateNewOrder()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "---- Beginning new order ----".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="91">Method 'ShoppingConsoleUI.CreateNewOrder()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Enter Product Id".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="82">Method 'ShoppingConsoleUI.CreateNewOrder()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Enter your choice (1 - 2)".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="103">Method 'ShoppingConsoleUI.CreateNewOrder()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Enter order quantity for {0}".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DisplayMainMenu()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="161">Method 'ShoppingConsoleUI.DisplayMainMenu()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "----Main Menu----".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="162">Method 'ShoppingConsoleUI.DisplayMainMenu()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "1. Show available items".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="163">Method 'ShoppingConsoleUI.DisplayMainMenu()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "2. Create new order".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="164">Method 'ShoppingConsoleUI.DisplayMainMenu()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "3. Generate invoice".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="165">Method 'ShoppingConsoleUI.DisplayMainMenu()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "4. Exit".</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="159">The 'this' parameter (or 'Me' in Visual Basic) of 'ShoppingConsoleUI.DisplayMainMenu()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DisplayOrderMenu()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="114">Method 'ShoppingConsoleUI.DisplayOrderMenu()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "----Order Menu----".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="115">Method 'ShoppingConsoleUI.DisplayOrderMenu()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "1. Add item".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="116">Method 'ShoppingConsoleUI.DisplayOrderMenu()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "2. Finish order".</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="112">The 'this' parameter (or 'Me' in Visual Basic) of 'ShoppingConsoleUI.DisplayOrderMenu()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateInvoice()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="137">Method 'ShoppingConsoleUI.GenerateInvoice()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "{0, 70}".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="124">Method 'ShoppingConsoleUI.GenerateInvoice()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "{0,10} | {1, -30} | {2, 6} | {3, 8} | {4, 8}".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="129">Method 'ShoppingConsoleUI.GenerateInvoice()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, params object[])'. Retrieve the following string(s) from a resource table instead: "{0,10} | {1, -30} | {2, 6} | {3, 8} | {4, 8}".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserInput()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="149">Method 'ShoppingConsoleUI.GetUserInput()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Please enter a valid option".</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="141">The 'this' parameter (or 'Me' in Visual Basic) of 'ShoppingConsoleUI.GetUserInput()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowAvailableItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="62">Method 'ShoppingConsoleUI.ShowAvailableItems()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: "{0,10} | {1, -40} | {2, 6}".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="67">Method 'ShoppingConsoleUI.ShowAvailableItems()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object, object, object)'. Retrieve the following string(s) from a resource table instead: "{0,10} | {1, -40} | {2, 6}".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Start()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="29">Method 'ShoppingConsoleUI.Start()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "--!!Welcome to Shopping Application!!--".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingConsoleUI.cs" Line="35">Method 'ShoppingConsoleUI.Start()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Enter your choice (1 - 4)".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ShoppingDAL" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#GetAvailableItems()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingDAL.cs" Line="77">Object 'connection' can be disposed more than once in method 'ShoppingDAL.GetAvailableItems()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 77</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingDAL.cs" Line="75">Object 'selectDataset' can be disposed more than once in method 'ShoppingDAL.GetAvailableItems()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 75</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingDAL.cs" Line="59">Be sure to set the DataSet Locale property wherever 'ShoppingDAL.GetAvailableItems()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialize()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingDAL.cs" Line="43">The 'this' parameter (or 'Me' in Visual Basic) of 'ShoppingDAL.Initialize()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PersistInvoice(ConsoleShopping.Invoice)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingDAL.cs" Line="98">Object 'connection' can be disposed more than once in method 'ShoppingDAL.PersistInvoice(Invoice)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 98</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ShoppingItem" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(ConsoleShopping.ShoppingItem,ConsoleShopping.ShoppingItem)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingItem.cs" Line="37">In externally visible method 'ShoppingItem.Equals(ShoppingItem, ShoppingItem)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingItem.cs" Line="37">In externally visible method 'ShoppingItem.Equals(ShoppingItem, ShoppingItem)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHashCode(ConsoleShopping.ShoppingItem)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2012-07-19 13:11:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Ram Kumar\Desktop\MBABootCamp2012\Assignment-3\Ram\Code\ConsoleShopping\ConsoleShopping" File="ShoppingItem.cs" Line="42">In externally visible method 'ShoppingItem.GetHashCode(ShoppingItem)', validate parameter 'obj' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 98</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever {1} creates an instance of that type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
